input {
    jdbc {
        # Postgres jdbc connection string to our database, mydb
        jdbc_connection_string => "jdbc:postgresql://13.251.77.5:5432/starrise_test"
        # The user we wish to execute our statement as
        jdbc_user => "postgres"
        jdbc_password => "docker1130!#%&("
        # 
        # jdbc_validate_connection => true
        # The path to our downloaded jdbc driver
        jdbc_driver_library => "/usr/share/java/postgresql-42.2.5.jar"
        # The name of the driver class for Postgresql
        jdbc_driver_class => "org.postgresql.Driver"
        # Schedule for input
        schedule => "*/2 * * * *"
        # Params for sql
        parameters => {
            "is_visible" => "t"
        }
        
        # our query
        statement => "SELECT id as project_id,son_classify_id,country_id,project_name,small_img_url,service_charge,son_model,created_at,updated_at from star_project_info where updated_at >= :sql_last_value"
        # statement_filepath => "/opt/logstash/conf/jdbc.sql"

        # 是否记录上次执行结果, 如果为真,将会把上次执行到的 tracking_column 字段的值记录下来,保存到 last_run_metadata_path 指定的文件中
        record_last_run => "true"

        # 是否需要记录某个column 的值,如果record_last_run为真,可以自定义我们需要 track 的 column 名称，此时该参数就要为 true. 否则默认 track 的是 timestamp 的值.
        use_column_value => "true"

        # 如果 use_column_value 为真,需配置此参数. track 的数据库 column 名,该 column 必须是递增的. 一般是mysql主键
        tracking_column => "updated_at"
        
        # 
        tracking_column_type => "timestamp"

        #
        last_run_metadata_path => "/etc/logstash/record_last_run/project_info"

        # 防止文档间数据错乱
        type => "project_info"

        # 是否清除 last_run_metadata_path 的记录,如果为真那么每次都相当于从头开始查询所有的数据库记录
        clean_run => "false"

        # 是否将 字段(column) 名称转小写
        lowercase_column_names => "true"
    }
}

output {
    if [type] == "project_info" {
        elasticsearch {
            hosts => ["http://172.31.33.116:9200"]
            index => "project_info"
            document_type => "_doc"
            document_id => "%{project_id}"
            # template => "/etc/logstash/template/project_info.json"
            # template_name => "project_info"
            # template_overwrite => true
            # manage_template => true
            # ssl_certificate_verification => false
        }
    }
}
