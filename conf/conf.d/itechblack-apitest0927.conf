server {
    listen 80;
    server_name apitest.itechblack.com;
    add_header Strict-Transport-Security max-age=31536000;
    return 301 https://apitest.itechblack.com$request_uri;
}


server {
    listen       443 ssl http2;
    server_name  apitest.itechblack.com;
    root   /var/www/html/itechblack-apitest0927/api/web;
    index  index.php index.html index.htm;
    #charset koi8-r;

    #静态文件，nginx自己处理
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
    {
        # root /var/www/html/src/api/web;
        if (-f $request_filename) {
            expires 10d;
            break;
        }
    }
    # location ?~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
    # {
    add_header Access-Control-Allow-Origin '*';
    add_header Access-Control-Allow-Methods 'POST,GET,PUT,PATCH,OPTIONS,DELETE';
    add_header Access-Control-Max-Age '3600';
    add_header Access-Control-Allow-Headers $http_access_control_request_headers;
    add_header Access-Control-Allow-Credentials 'true';
    # add_header Content-Length 0;
    # }
    
    if ($request_method = 'OPTIONS') {
        return 200;
    }
    
    access_log /dev/null;
    #access_log  /var/log/dnmp/nginx.itechblack-apitest.access.log  main;
    error_log  /var/log/dnmp/nginx.itechblack-apitest.error.log  warn;
    
    #error_page  404              /404.html;

    ssl on;
    ssl_certificate /etc/nginx/conf.d/certs/itechblack.com/215087450380797.pem;
    ssl_certificate_key /etc/nginx/conf.d/certs/itechblack.com/215087450380797.key;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";
    add_header Strict-Transport-Security max-age=31536000;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    location / {
        if (!-e $request_filename){
            rewrite ^/(.*) /index.php last;
        }
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    
    location ~ \.php$ {
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PATH_INFO  $fastcgi_path_info;
        fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;
        fastcgi_param  PATH_INFO  $fastcgi_path_info;
        include        fastcgi_params;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

